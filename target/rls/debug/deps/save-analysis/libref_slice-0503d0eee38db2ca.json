{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1","program":"/home/alirezacodes/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ref_slice","/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=0503d0eee38db2ca","-C","extra-filename=-0503d0eee38db2ca","--out-dir","/home/alirezacodes/Development/open-rsp/target/rls/debug/deps","-L","dependency=/home/alirezacodes/Development/open-rsp/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/alirezacodes/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/alirezacodes/Development/open-rsp/target/rls/debug/deps/libref_slice-0503d0eee38db2ca.rmeta"},"prelude":{"crate_id":{"name":"ref_slice","disambiguator":[1571719715209256261,0]},"crate_root":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src","external_crates":[{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8055937789589085173,0]}},{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9266852701449989672,0]}},{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3150474620658042907,0]}}],"span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":0,"byte_end":2426,"line_start":1,"line_end":99,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":26,"byte_end":39,"line_start":3,"line_end":3,"column_start":15,"column_end":28},"alias_span":null,"name":"mut_opt_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12},"span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":94,"byte_end":107,"line_start":6,"line_end":6,"column_start":15,"column_end":28},"alias_span":null,"name":"mut_ref_slice","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":0,"byte_end":2426,"line_start":1,"line_end":99,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":356,"byte_end":365,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"ref_slice","qualname":"::ref_slice","value":"fn ref_slice<A, '_>(&'_ A) -> &'_ [A]","parent":null,"children":[],"decl_id":null,"docs":" Converts a reference to `A` into a slice of length 1 (without copying).\n","sig":null,"attributes":[{"value":"/ Converts a reference to `A` into a slice of length 1 (without copying).","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":127,"byte_end":202,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"inline","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":203,"byte_end":212,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"deprecated =\n\"Similar method was added to std and stabilized in rust 1.28.0. \\\n                Use `core::slice::from_ref` instead.\"","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":213,"byte_end":348,"line_start":10,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":667,"byte_end":680,"line_start":20,"line_end":20,"column_start":8,"column_end":21},"name":"ref_slice_mut","qualname":"::ref_slice_mut","value":"fn ref_slice_mut<A, '_>(&'_ mut A) -> &'_ mut [A]","parent":null,"children":[],"decl_id":null,"docs":" Converts a reference to `A` into a slice of length 1 (without copying).\n","sig":null,"attributes":[{"value":"/ Converts a reference to `A` into a slice of length 1 (without copying).","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":438,"byte_end":513,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"inline","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":514,"byte_end":523,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"deprecated =\n\"Similar method was added to std and stabilized in rust 1.28.0. \\\n                Use `core::slice::from_mut` instead.\"","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":524,"byte_end":659,"line_start":18,"line_end":19,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":871,"byte_end":880,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"opt_slice","qualname":"::opt_slice","value":"fn opt_slice<A, '_>(&'_ Option<A>) -> &'_ [A]","parent":null,"children":[],"decl_id":null,"docs":" Converts a reference to `Option<A>` into a slice of length 0 or 1 (without copying).\n","sig":null,"attributes":[{"value":"/ Converts a reference to `Option<A>` into a slice of length 0 or 1 (without copying).","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":765,"byte_end":853,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":854,"byte_end":863,"line_start":25,"line_end":25,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":1134,"byte_end":1147,"line_start":36,"line_end":36,"column_start":8,"column_end":21},"name":"opt_slice_mut","qualname":"::opt_slice_mut","value":"fn opt_slice_mut<A, '_>(&'_ mut Option<A>) -> &'_ mut [A]","parent":null,"children":[],"decl_id":null,"docs":" Converts a reference to `Option<A>` into a slice of length 0 or 1 (without copying).\n","sig":null,"attributes":[{"value":"/ Converts a reference to `Option<A>` into a slice of length 0 or 1 (without copying).","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":1028,"byte_end":1116,"line_start":34,"line_end":34,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/home/alirezacodes/.cargo/registry/src/github.com-1ecc6299db9ec823/ref_slice-1.2.1/src/lib.rs","byte_start":1117,"byte_end":1126,"line_start":35,"line_end":35,"column_start":1,"column_end":10}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}